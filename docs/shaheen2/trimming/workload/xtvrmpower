#!/usr/bin/env python
###############################################################################
# Copyright 2014 Cray Inc. All Rights Reserved.
#
# xtvrmpower - a script that can be used to quickly run the WTS xtvrm_power_test
#
# author: Pete Halseth
#
# Usage:
# -------
# ./xtvrmpower 
# 
################################################################################
##@package workload
# a basic script to run the WTS xtvrm_power_test 


import os,xtsystest 
from optparse import OptionParser

FULL_PATH_TO_CUR_DIR = os.path.abspath(os.path.dirname(os.path.realpath(__file__)))
FULL_PATH_TO_UTIL_DIR = FULL_PATH_TO_CUR_DIR + "/util"

try:                                                                                                                            
    from workload.util import system_configuration
except:
    sys.path.append(os.path.abspath(os.path.dirname(os.path.realpath(__file__))) + "/../..")
    from workload.util import system_configuration
sysconfig = system_configuration.BaseConfig.factory()

## method to parse commandline options  
def process_commandline_options():
    user_options = {}
    parser = OptionParser(usage="%prog [-h] [-s SMW_HOSTNAME] [-u SMW_USERNAME] [-p SMW_UTILS_PATH] [-c CNAME] [-o CUTOFF_OFFSET] [-t TRIM] [-r PARTITION] [--version]", version="%prog 1.0")
    
    parser.add_option("-s","--smw",dest="destination",default=None,
            help="network name of the SMW associated with this system")
   
    parser.add_option("-u","--user",dest="user",default="crayadm",
            help="username for the SMW")
    
    parser.add_option("-p","--remote_path",dest="smw_utils_path",
            default=None,
            help="path on SMW to xtvrm_pm_data.py script")
    
    parser.add_option("-c","--cname",dest="cname",default=None,
        help="a cname value representing the system resources to target")
    
    parser.add_option("-t","--trim",dest="trim",default=None,
            help="an integer value representing the trim value, where any node with a bin value below this number will be considered a slow node.  Example: 380")
    
    parser.add_option("-o","--offset",dest="cutoff_offset",default=None,
            help="an integer value representing an offset that should be added to the generated system bin average. Example: 10")
    
    parser.add_option("-r","--partition",dest="partition",default=None,
        help="a name of the partition to target")
    
    (options, args) = parser.parse_args()
    if options:
        user_options['cname']=options.cname
        user_options['destination']=options.destination 
        user_options['user']=options.user
        user_options['smw_utils_path']=options.smw_utils_path
        user_options['user']=options.user
        user_options['smw_utils_path']=options.smw_utils_path
        user_options['hard_trim']=options.trim
        user_options['system_bin_average_offset']=options.cutoff_offset
        user_options['partition']=options.partition

    return user_options

if __name__ == '__main__':

    user_options = process_commandline_options()
    
    (user_options['first'],user_options['last']) = sysconfig.get_smw_info(user_options['user'])
    user_options['transfer_results']=True
    if not user_options['destination']:
        user_options['destination']=sysconfig.get_smw_name()
    sysconfig.test_ssh_auth(user_options['destination'], user_options['first'], user_options['last'])

    user_options['test_order']="xtvrm_socket0_test,xtvrm_socket1_test"
    user_options['max_loops']="1"

    xtsystest.MODULE_CONFIG['user_options'] = user_options
    xtsystest.main(xtsystest.MODULE_CONFIG['user_options']) 
			
